---
# Capistrano-style deployment with Ansible
# Code from git, configs from local machine

- name: Create releases directory structure
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
  loop:
    - "{{ apps_dir }}"
    - "{{ apps_dir }}/releases"
    - "{{ apps_dir }}/shared"
    - "{{ apps_dir }}/shared/n8n_storage"
    - "{{ apps_dir }}/shared/backups"

- name: Get current timestamp for release
  set_fact:
    release_timestamp: "{{ ansible_date_time.epoch }}"

- name: Set release path
  set_fact:
    release_path: "{{ apps_dir }}/releases/{{ release_timestamp }}"

- name: Clone repository to new release directory
  git:
    repo: "{{ repo_url }}.git"
    dest: "{{ release_path }}"
    version: "{{ git_branch | default('main') }}"
    force: yes

- name: Copy local config files to shared directory
  copy:
    src: "{{ item.src }}"
    dest: "{{ apps_dir }}/shared/{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
  loop:
    - { src: "../configs/production.env", dest: ".env", mode: "0600" }
    - { src: "../configs/Caddyfile.production", dest: "Caddyfile", mode: "0644" }
  when: inventory_hostname in groups['production']

- name: Copy staging configs
  copy:
    src: "{{ item.src }}"
    dest: "{{ apps_dir }}/shared/{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
  loop:
    - { src: "../configs/staging.env", dest: ".env", mode: "0600" }
    - { src: "../configs/Caddyfile.staging", dest: "Caddyfile", mode: "0644" }
  when: inventory_hostname in groups['staging']

- name: Remove n8n_storage directory from release if it exists
  file:
    path: "{{ release_path }}/n8n_storage"
    state: absent

- name: Create symlinks to shared files
  file:
    src: "{{ apps_dir }}/shared/{{ item }}"
    dest: "{{ release_path }}/{{ item }}"
    state: link
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    force: yes
  loop:
    - ".env"
    - "n8n_storage"

- name: Stop current services
  community.docker.docker_compose_v2:
    project_src: "{{ apps_dir }}/current"
    state: absent
  ignore_errors: yes

- name: Update current symlink
  file:
    src: "{{ release_path }}"
    dest: "{{ apps_dir }}/current"
    state: link
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"

- name: Start new release
  community.docker.docker_compose_v2:
    project_src: "{{ apps_dir }}/current"
    state: present
    pull: always

- name: Keep only last 5 releases
  shell: |
    cd {{ apps_dir }}/releases
    ls -t | tail -n +6 | xargs rm -rf
  ignore_errors: yes
